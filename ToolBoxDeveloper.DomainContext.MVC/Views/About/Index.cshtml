<h1>O Problema</h1>
<h2>Falhas de Comunicação</h2>
<p>
    Se comunicar é um ato considerado algo simples, entretanto, é um processo bem mais complexo do que se pensa, 
    onde podem ocorrer falhas como em qualquer outro processo, mas quando se trata de engenharia, as consequências podem ser significativas. 
    O objetivo <a href="https://pmkb.com.br/artigos/problemas-e-prejuizos-pelas-falhas-de-comunicacao-entre-setores-da-engenharia" target="_blank">deste artigo</a> é apresentar como uma comunicação ineficiente pode trazer graves prejuízos e problemas para a engenharia, seus produtos e clientes.
    Ao final, espera-se salientar ao leitor como uma boa comunicação é extremamente importante nas organizações para evitar impactos 
    negativos que acarretam perdas de qualidade, financeiras e consequentemente profundo desgaste na relação com clientes.
</p>
<p> 
    Fonte: artigos pmkb disponivel em &lt;https://pmkb.com.br/artigos/problemas-e-prejuizos-pelas-falhas-de-comunicacao-entre-setores-da-engenharia&gt; (Acesso em: 26 de Agosto de 2022)
</p>
<h2>Multiplas linguagens</h2>
<p>
Em um projeto sem uma linguagem comum, os desenvolvedores precisam traduzir para especialistas de domínio, especialistas de domínio traduzem entre desenvolvedores e ainda para outros especialistas de domínio,
    desenvolvedores traduzem um para o outro.
</p> 
<p>A tradução confunde os conceitos do modelo, o que leva a refatoração de código, a indiretividade da comunicação oculta a formação de cismas — diferentes membros da equipe usam os termos de maneira 
diferente, mas não percebem isso. Isso leva a não confiável software que não se encaixa. 
O esforço de tradução impede a interação de conhecimento e ideias que levam a insights de modelos profundos.</p>
<p>Erric Evans Domain-Driven-Design</p>
<h1>Sobre</h1>
<p>Dado o tamanho do problema seria imaturo dizer que apenas uma tecnica poderia
soluciona-lo.
O projeto é um dos remedios que devem ser utilizados alinhados com outros remedios poderemos minimizar os impactos causados pela má comunicação.</p>
<h2>Ubiquitous Language</h2>
<p>
    Linguagem Ubíqua (ou Linguagem Onipresente) é um conceito central de DDD. Ela consiste de um conjunto de termos que devem ser plenamente entendidos tanto por especialistas no domínio (usuários do sistema) como por desenvolvedores (implementadores do sistema).
</p>
<p>Para um projeto de software dar certo, DDD defende que esses dois papéis – especialistas no domínio e desenvolvedores – devem falar a mesma língua, que vai constituir a chamada Linguagem Ubíqua do sistema. Essa ideia é ilustrada na seguinte figura:</p>
<img class="img-about" alt="relacionamento linguagem ubiqua na comunicacao" src="https://engsoftmoderna.info/artigos/figs/linguagem-onipresente.svg" />
<p>
    Fonte: engsoftmoderna disponivel em &lt;https://engsoftmoderna.info/artigos/ddd.html&gt; (Acesso em: 26 de Agosto de 2022)
</p>